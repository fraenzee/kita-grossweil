---
import { navItems } from '../scripts/navigation.js';
---

<header id="main-header" class="bg-adobelightblue text-adobeblack shadow-md sticky top-0 z-50">
  <div class="container mx-auto flex justify-between items-center py-6 px-6 md:px-8">
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-3">
      <img src="/kita-grossweil-logo-mit-text.jpg" alt="Kita Großweil" class="h-20 w-auto" />
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden xl:flex items-center text-xl relative">
      <ul class="flex space-x-6">
        {navItems.map(item => (
          <li class="relative group">
            <a
              href={item.href || "#"}
              class={`flex items-center px-4 py-2 border-b-2 border-transparent hover:border-adobedarkblue transition-colors ${item.isButton ? 'bg-adobeyellow rounded-full px-4 py-2 hover:bg-adobepink hover:text-adobewhite' : ''}`}
            >
              {item.title}
            </a>
            {item.children && (
              <ul class="absolute left-0 mt-2 w-60 bg-adobelightblue rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-60">
                {item.children.map(child => (
                  <li>
                    <a href={child.href} class="block px-4 py-2 text-adobeblack hover:bg-adobepink hover:text-adobewhite rounded-lg transition-colors">
                      {child.title}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </li>
        ))}
      </ul>
    </nav>

    <!-- Hamburger Button Mobile -->
    <button id="menu-btn" class="xl:hidden relative h-8 w-8 text-adobeblack" aria-controls="mobile-menu" aria-expanded="false">
      <svg id="burger-icon" xmlns="http://www.w3.org/2000/svg" class="h-full w-full absolute top-0 left-0 transition-opacity duration-300 opacity-100" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
      </svg>
      <svg id="close-icon" xmlns="http://www.w3.org/2000/svg" class="h-full w-full absolute top-0 left-0 transition-opacity duration-300 opacity-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
</header>

<!-- Mobile Drawer -->
<nav id="mobile-menu" class="fixed top-0 left-0 h-full w-64 bg-adobelightblue shadow-lg transform -translate-x-full transition-transform duration-300 xl:hidden z-60 p-6 overflow-y-auto">
  <ul class="space-y-4 text-xl text-adobeblack">
    {navItems.map((item, i) => (
      <li>
        {item.children ? (
          <>
            <button
              class="flex justify-between w-full items-center px-2 py-2 hover:text-adobepink transition-colors"
              data-toggle={`submenu-${i}`}
              aria-expanded="false"
            >
              {item.title}
              <span class="ml-2">▾</span>
            </button>
            
            <ul id={`submenu-${i}`} class="ml-4 mt-2 hidden flex-col space-y-2">
              {item.children.map(child => (
                <li>
                  <a href={child.href} class="block px-2 py-1 hover:text-adobepink transition-colors">
                    {child.title}
                  </a>
                </li>
              ))}
            </ul>
          </>
        ) : (
          <a
            href={item.href}
            class={`block px-2 py-2 hover:text-adobepink transition-colors ${
              item.isButton
                ? 'bg-adobeyellow rounded-full text-center hover:bg-adobepink hover:text-adobewhite'
                : ''
            }`}
          >
            {item.title}
          </a>
        )}
      </li>
    ))}
  </ul>
</nav>
<div id="drawer-backdrop" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50"></div>

<script type="module">
document.addEventListener('DOMContentLoaded', () => {
  const toggleButton = document.getElementById('menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const burgerIcon = document.getElementById('burger-icon');
  const closeIcon = document.getElementById('close-icon');
  const backdrop = document.getElementById('drawer-backdrop');

  // Mobile Drawer öffnen/schließen
  toggleButton.addEventListener('click', () => {
    const expanded = toggleButton.getAttribute('aria-expanded') === 'true';
    const isOpening = !expanded;
    toggleButton.setAttribute('aria-expanded', isOpening.toString());

    mobileMenu.classList.toggle('-translate-x-full', !isOpening);
    mobileMenu.classList.toggle('translate-x-0', isOpening);
    backdrop.classList.toggle('hidden', !isOpening);

    burgerIcon.style.opacity = isOpening ? '0' : '1';
    closeIcon.style.opacity = isOpening ? '1' : '0';
  });

  // Klick auf Backdrop schließt Drawer wieder
  backdrop.addEventListener('click', () => {
    toggleButton.setAttribute('aria-expanded', 'false');
    mobileMenu.classList.add('-translate-x-full');
    mobileMenu.classList.remove('translate-x-0');
    backdrop.classList.add('hidden');
    burgerIcon.style.opacity = '1';
    closeIcon.style.opacity = '0';
  });

  // Mobile Untermenüs
  document.querySelectorAll('#mobile-menu button[data-toggle]').forEach(btn => {
    const targetId = btn.dataset.toggle;
    const submenu = document.getElementById(targetId);

    btn.addEventListener('click', () => {
      const expanded = btn.getAttribute('aria-expanded') === 'true';
      btn.setAttribute('aria-expanded', (!expanded).toString());
      submenu.classList.toggle('hidden');
    });
  });
});
</script>